plugins {
    id 'io.jmix' version '2.2.3'
    id 'java'
    id 'com.palantir.docker' version '0.36.0'
}

apply plugin: 'org.springframework.boot'
apply plugin: 'com.vaadin'

jmix {
    bomVersion = '2.2.3'
}

group = 'com.company'
version = '0.0.1-SNAPSHOT'

repositories {
    mavenCentral()
    maven {
        url 'https://global.repo.jmix.io/repository/public'
    }
}

dependencies {
    implementation 'io.jmix.core:jmix-core-starter'
    implementation 'io.jmix.pessimisticlock:jmix-pessimisticlock-starter'
    implementation 'io.jmix.pessimisticlock:jmix-pessimisticlock-flowui-starter'
    implementation 'io.jmix.data:jmix-eclipselink-starter'
    implementation 'io.jmix.security:jmix-security-starter'
    implementation 'io.jmix.security:jmix-security-flowui-starter'
    implementation 'io.jmix.security:jmix-security-data-starter'
    implementation 'io.jmix.localfs:jmix-localfs-starter'
    implementation 'io.jmix.flowui:jmix-flowui-starter'
    implementation 'io.jmix.flowui:jmix-flowui-data-starter'
    implementation 'io.jmix.flowui:jmix-flowui-themes'
    implementation 'io.jmix.datatools:jmix-datatools-starter'
    implementation 'io.jmix.datatools:jmix-datatools-flowui-starter'

    implementation 'org.springframework.boot:spring-boot-starter-web'

//    for Jmix 2.1
//    implementation 'org.springframework.cloud:spring-cloud-starter-vault-config:4.0.2'

    implementation 'org.springframework.cloud:spring-cloud-starter-vault-config:4.1.0'

    //actuator
    implementation 'org.springframework.boot:spring-boot-starter-actuator'

    testImplementation('org.springframework.boot:spring-boot-starter-test') {
        exclude group: 'org.junit.vintage', module: 'junit-vintage-engine'
    }
    testImplementation 'io.jmix.flowui:jmix-flowui-test-assist'
    implementation 'org.postgresql:postgresql'


    implementation 'org.springframework.boot:spring-boot-starter-undertow'
    modules {
        module("org.springframework.boot:spring-boot-starter-tomcat") {
            replacedBy("org.springframework.boot:spring-boot-starter-undertow", "Use Undertow instead of Apache Tomcat")
        }
    }

    implementation 'com.hazelcast:hazelcast'

}

test {
    useJUnitPlatform()
}

vaadin {
    optimizeBundle = false
}

docker {
    dependsOn(tasks.bootJar)  // завитит от сборки JAR файла
    name "$rootProject.name:$version"  // имя образа
    dockerfile file('docker/Dockerfile.layered')  // где найти докерфайл
    files tasks.bootJar.outputs // куда положить собранный образ
}

bootBuildImage {
    imageName = "jmix_pm_boot_image"
}
